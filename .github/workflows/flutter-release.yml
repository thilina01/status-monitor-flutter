name: Build & Deploy Flutter App to Play Store

on:
  push:
    branches:
      - main 
  workflow_dispatch:

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # Required for Workload Identity Federation
      contents: read   # Required to fetch repository code

    steps:
      # ✅ Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # ✅ Authenticate to Google Cloud
      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "projects/736544885079/locations/global/workloadIdentityPools/github-actions-pool/providers/github"
          service_account: "github-deploy@open-212202.iam.gserviceaccount.com"

      # ✅ Install Flutter
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'  # Update to the latest stable version
          cache: true

      # ✅ Decode and Save Keystore
      - name: Decode and Save Keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > android/app/upload-keystore.jks

      # ✅ Setup Keystore in Gradle
      - name: Configure Keystore
        run: |
          cat <<EOF > android/key.properties
          storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
          storeFile=upload-keystore.jks
          EOF

      # ✅ Set Dynamic Versioning in pubspec.yaml
      - name: Set Dynamic Version in pubspec.yaml
        run: |
          VERSION_NAME="1.0.${GITHUB_RUN_NUMBER}"
          VERSION_CODE="${GITHUB_RUN_NUMBER}"
          sed -i "s/^version: .*/version: $VERSION_NAME+$VERSION_CODE/" pubspec.yaml
          echo "Updated version: $VERSION_NAME+$VERSION_CODE"

      # ✅ Install Dependencies
      - name: Get Flutter Dependencies
        run: flutter pub get

      # ✅ Run Flutter Tests (Optional)
      - name: Run Tests
        run: flutter test

      # ✅ Build the App (AAB Format)
      - name: Build Android App Bundle
        run: flutter build appbundle

      - name: Verify Build Output
        run: ls -R build/app/outputs/bundle/release/
      
      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: "{}"  # Use Workload Identity Federation
          packageName: com.slconsultech.statusmonitorapp
          releaseFiles: ${{ github.workspace }}/build/app/outputs/bundle/release/app-release.aab
          track: internal
          status: completed

      # ✅ Clean Up Sensitive Files
      - name: Clean Up
        run: rm -f android/app/upload-keystore.jks

# Secrets Required:
# ANDROID_KEYSTORE_BASE64	The base64 encoded keystore file (upload-keystore.jks).
# ANDROID_KEYSTORE_PASSWORD	The password for the keystore.
# ANDROID_KEY_ALIAS	The key alias name.
# ANDROID_KEY_PASSWORD	The password for the key alias.
# GOOGLE_PLAY_KEY_JSON	The base64 encoded content of google_play_key.json. [ Optional ]

# To encode the keystore file, run the following command:
# base64 upload-keystore.jks | pbcopy # macOS
# base64 upload-keystore.jks | clip   # Windows
# base64 -w 0 upload-keystore.jks > keystore.b64 # Linux

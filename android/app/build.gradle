plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// Load keystore properties from key.properties
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.slconsultech.statusmonitorapp"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        // Enable core library desugaring
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.slconsultech.statusmonitorapp"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            if (keystoreProperties['storeFile']) {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            // If signing is configured, use it. Otherwise, skip signing (for CI/testing).
            if (signingConfigs.release.storeFile != null) {
                signingConfig signingConfigs.release
            }

            // Optional: include native debug symbols in .aab (useful for crash reporting)
            ndk {
                debugSymbolLevel 'FULL'
            }

            // Enable Proguard/R8 if needed
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dependencies {
        implementation 'androidx.core:core-splashscreen:1.0.1'
        implementation 'com.google.android.material:material:1.9.0'
        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'

    }

}

flutter {
    source = "../.."
}
